
/*
Squilliam Fancyson

Swift?
More like slow
*/

import Foundation
import Cocoa
import Darwin

print("''''''+++++++++++++++++++++++######+++++++++++++++++++++++++++++++++++")
print("+'+''+'++++++++'++'++###':,..,.,,....,:'###+++'+'+++++++++++++++++++++")
print("+''++++++++++++'+##;,,'+,,,,,,,,++,,,,,,,,..:+#+''++++++++++++++++++++")
print("'''+'+++''++++#;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.,+#+'''''++++++++++++++")
print("''''''+++++#+,,,,,,,,,,'++,,,,,,,,,,,,,,,,,,,,,':.,++''''+'+'+++++++++")
print("''+'''+++#',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,++''''+'''+++++++")
print("'''''''++,,,,;+:,,,,,,,,,,,,,,,,,,,,,,,,:,,,,,,,,,,,,,,+#'++++++++++++")
print("''''''#;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,:++,,,,,#+'''++++++++")
print("'''''#:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,.;#''''''++++")
print("''''#,,,,,,,,,,,,,,.:'##@@@######@@##':,,,,,,,,,,,,,,,,,,,,:#++'++++++")
print("'''#,,,,,,,,,,,,,,;,,,,,,,,,,,,,,,,,,,.:'#;,,,,,,,,,,,,,,,,,,#+''+++++")
print("''+:,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#''''''+")
print("''#,,,,,,,,,;+,,,,,,,,,,,,.:';,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#''''''")
print("'+',,,,,,,,,,+@#:,,,,,.,:#@@@@#:,,,,,,,,,,,,,;,,,,,,,,,,,,,,,,,'''''''")
print("'#:,,,,,,,,,,,:#@@@@@@@@@@@@@@@@@@@+;,,,;+#@@;,,,,,,,,,,,,,,,,,.#'''''")
print("'#,,,,,,,,,,,,,.:#@@@@@@@@@+;+@@@@@@@@@@@@@;,,,,,,,,,,,,,,,,,,,,#'''''")
print("'#,,,,,,,,,,,,,,,,,,:;;:,,,,,,,,+@@@@@@+:,,,,,,,,,,,,,,,,,,,,,,,''''''")
print("'+;,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,''''''")
print("''+,,,,,,,,,,,,,,,,,,:'':,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,+'''''")
print("''+:,,,,,,,,,,,,,,;+;::::;#'.':,,,,,,,,,.,,,,,,,,,,,,,,,,,,,,,,.#'''''")
print("'''#,,,,,,,,,,,,,+'::::::::;#+,,,,,,,;#+;:';,,,,,,,,,,,,,,,,,,,:+'''''")
print("''''#:,,,,,,,,,,+;::::::::::+,,,,,+#;::::::#,,,,,,,,,,,,,,,,,,,#''''''")
print("'''''#:,,,,,,,,:':::::::::::+@+@+::::::::::':,,,,,,,,,,,,,,,,,+'''''''")
print("''''''+',,,,,,,#::::::::::::#:::::::::::::::',,,,,,,,,,,,,,,,+''''''''")
print("''''''''#;,,,,,#::::::::::::+:::::::::::::::#,,,,,,,,,,,,,,,#'''''''''")
print("''''''''''#+,,:#;::::::::::++;::::::::::::::#,,,,,,,,,,,,.'#''''''''''")
print("''''''''''''+#':;#@@@@@#:::'##@@@@@+;::::#++,,,,,,,,,,,'#''''''''''''")
print("'''''''''''''++@,....,++'.,++.+++:....:##;::#:,,,,,,,:#+''''''''''''''")
print("'''''''''''''''#...........,'............,+':+,,,,'#+'''''''''''''''''")
print("'''''''''''''''@:.........``#..............@+,,+#'''''''''''''''''''''")
print("'''''#@#':;#@+'#+....:#@#+''#.............':,,.#''''''''''''''''''''''")
print("'''#+,,,,,,,,,;##:,##:,,,,,,:;...........,+,,,,#++#@@@##''''''''''''''")
print("''#;,,,,,,,,,,,,,#+,,,,,,,,,.+,.........,+,,:++:.,,,,,,,;#''''''''''''")
print("'+',,:##+++#@;,,#:,,,,,,,,,,#:+;.......;+,,,,,,,,,,,,,,,,.++''''''''''")
print("'#,,,#+++++++#;#,,,,,,,,,,,+,,,:#',.:++,,,,,,,,.,;###+,,,,,+''''''''''")
print("'@.,,#+++++++@@,,,,,,,,,,,,',,,,,,,,,,,,,,,,,;###+++++##,,,,+'''''''''")
print("'#,,,#+++++++#;,,,,,,,,,,,++:,.,,,,,,..,'###,``:++++++++#,,,#+''''''''")
print("'#:,,#+++++++@,,,,,,,,,,,.#````.,;#+;,`````````#+++++++++,,.#+''''''''")
print("''+,,:#+++++#+,,,,,,,,,,,.+```````````````````:++++++++@,,,,+''''''++'")
print("''#:,,,##++##:,,,,,,,,,,,,+```````````````  `.#+++++++#;,,,+++++'+++++")
print("'++#:,,,:##:',,,,,,,,,,,,:+:;++##@######';,,.`;++++++#:,,,++++++++++++")
print("++++#+:,,,,;@,,,,,,,,,,,,,'````````````````````++++#',,,,+++++++++++++")
print("++++++##:,,,+,,,,,,,,,,,,.'````````````````````+@+,,,,,'#+++++++++++++")
print("+++++++++#+:':,,,,,,,,,,,,@##+':,,.,:;++#@@#+;,,,,,,,+@+++++++++++++++")
print("++++++++++++#+,,,,,,,,,,,:;,,,,.....,,,,,,,,,,,,,,:##+++++++++++++++++")
print("+++++++++++++#,,,,,,,,,,,#,,,,,,,,,,,,,,,,..,;####++++++++++++++++++++")
print("++++++++++++++#,,,,,,,,,:####@@####@@@@@@#++++++++++++++++++++++++++++")
print("+++++++++++++++#:,,,,,,;#+++++++++#,,,.#++++++++++++++++++++++++++++++")
print("+++++++++++++++++@###@#++++++++++++#,,,#++++++++++++++++++++++++++++++")
print("+++++++++++++++++++++++++++++++++++#,,,+++++++++++++++++++++++++++++++")
print("+++++++++++++++++++++++++++++++++++#;,,,@+#+++++++++++++++++++++++++++")
print("++++++++++++++++++++++++++++++++++#'#,,.#''@@@++++++++++++++++++++++++")
print("+++++++++++++++++++++++++++++++++++'#####''+@@@@++++++++++++++++++++++")
print("++++++++++++++++++++++++++++++++##''#''#''#'+@@@@++++++++++++++++++++'")
print("+++++++++++++++++++++++++++++++@#''+';;#';''+@@@@###+++++'''+'+++'++'+")
print("++++++++++++++++++++++++++++++@@+';;;;'';;;'#@@@@#++##+++++''+'++++++'")
print("++++++++++++++++++++++++++++++@@+';;;;'';;'#@@@@@++++++##+++'''''''+++")
print("++++++++++++++++++++++++++++++@@@';;;;'+''#@@@@@@++++++++##+''''+''+'+")
print(")++++++++++++++++++++++++++++++@@@#';;;;#'#@@@@@@+++++++++++##+'+++++++")
print("....................I'm Already a demon Kaz............................")


infix operator ^^ { }
func ^^ (radix: Float, power: Float) -> Float {
    return Float(pow(Double(radix), Double(power)))
}


print("\n")

print("WELCOME to Squilliam Fancyson's Function MACHINE")

print("\n")

print("who are you? ", terminator: "")

// Get the user's name
var nameo = readLine(stripNewline: true)

// Say hello, so long as some input was provided
// Add an extra newline at the start     \n
if let name = nameo {
    print("\n Aight we're going to do some math now \(name)!")
}


var validInput : Bool          // Status of input
repeat {
    
    // Show prompts
    print("\nType your A value")
    
    // Get the user's input
    var eyy = readLine(stripNewline: true)
    
    // Assume valid input
    validInput = true
    
    // Interpret the result, if one was given
    if let a = eyy {
        
        // Add a blank line to separate response from input block
        print("")

}
    print("\nType your B value")
        
        var bee = readLine(stripNewline: true)
        
        validInput = true
        
if let b = bee {

print("")

    }

    
    print("\nType your C value")
    
    var see = readLine(stripNewline: true)
    
    validInput = true
    
    if let c = see {
        
        print("")
        
    }
    

    
    
    
    var a = Float(eyy!)
    
    var b = Float(bee!)
    
    var c = Float(see!)
    
/*
    print("a=")
    print(a)
    
    print("\n")
    
    print("b=")
    print(b)
    
    print("\n")
    
    print("c=")
    print(c)
    
*/



    var root1 = ((-b! + sqrt(b!*b!-4*a!*c!))/2*a!)
    
    var root2 = ((-b! - sqrt(b!*b!-4*a!*c!))/2*a!)
    
    
    if(isnan(root1) && (isnan(root2))) {
        var vertx = (-b!/2*a!)
        
        var x = vertx
        
        var y = (((a!*x)^^2)+(b!*Float(x))+c!)
        
        print("Your Vertex is", "(",x,",",y,")")
        
        print("\n")
        
        print("The vertex form equation is",a!,"(x +", x,")^2","+",y)
        
    } else {
        
        var vertx = ((root1+root2)/2)
        
        var x = vertx
        
        var y = (((a!*x)^^2)+(b!*Float(x))+c!)
        
        print("Your Vertex is", "(",x,",",y,")")
        
        print("\n")
        
        print("The vertex form equation is",a!,"(x +", x,")^2","+",y)
        
        print("your roots are", root1, root2)
    }

    
    
    

    
    
    


    
    
} while validInput == false

// Print one additional blank line to separate from exit code message that is automatically displayed
print("")
